/* Generated by re2c 3.1 on Fri Jan 12 15:48:08 2024 */

use std::str;

use super::ast::Node;

pub(crate) struct LexOne {
    pub(crate) consume: usize,
    pub(crate) node: Option<Node>,
}

pub(crate) fn lex_one(s: &[u8]) -> LexOne {
    let mut cursor = 0;
    let mut marker = 0;

    {
        #[allow(unused_assignments)]
        let mut yych: u8 = 0;
        let mut yystate: usize = 0;
        'yyl: loop {
            match yystate {
                0 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    cursor += 1;
                    match yych {
                        0x09..=0x0A | 0x0D | 0x20 => {
                            yystate = 2;
                            continue 'yyl;
                        }
                        0x2A | 0x2D | 0x41..=0x5A | 0x5F | 0x61..=0x7A => {
                            yystate = 4;
                            continue 'yyl;
                        }
                        0x3B => {
                            yystate = 6;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 1;
                            continue 'yyl;
                        }
                    }
                }
                1 => {
                    return LexOne {
                        consume: 0,
                        node: None,
                    };
                }
                2 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x09..=0x0A | 0x0D | 0x20 => {
                            cursor += 1;
                            yystate = 2;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 3;
                            continue 'yyl;
                        }
                    }
                }
                3 => {
                    return LexOne {
                        consume: cursor,
                        node: None,
                    };
                }
                4 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x2A | 0x2D | 0x30..=0x39 | 0x41..=0x5A | 0x5F | 0x61..=0x7A => {
                            cursor += 1;
                            yystate = 4;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 5;
                            continue 'yyl;
                        }
                    }
                }
                5 => {
                    return LexOne {
                        consume: cursor,
                        node: Some(Node::Symbol(
                            str::from_utf8(&s[..cursor]).unwrap().to_string(),
                        )),
                    };
                }
                6 => {
                    marker = cursor;
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x00..=0x09 | 0x0B..=0x0C | 0x0E..=0x7F => {
                            cursor += 1;
                            yystate = 6;
                            continue 'yyl;
                        }
                        0xC2..=0xDF => {
                            cursor += 1;
                            yystate = 8;
                            continue 'yyl;
                        }
                        0xE0 => {
                            cursor += 1;
                            yystate = 10;
                            continue 'yyl;
                        }
                        0xE1..=0xEC | 0xEE..=0xEF => {
                            cursor += 1;
                            yystate = 11;
                            continue 'yyl;
                        }
                        0xED => {
                            cursor += 1;
                            yystate = 12;
                            continue 'yyl;
                        }
                        0xF0 => {
                            cursor += 1;
                            yystate = 13;
                            continue 'yyl;
                        }
                        0xF1..=0xF3 => {
                            cursor += 1;
                            yystate = 14;
                            continue 'yyl;
                        }
                        0xF4 => {
                            cursor += 1;
                            yystate = 15;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 7;
                            continue 'yyl;
                        }
                    }
                }
                7 => {
                    return LexOne {
                        consume: cursor,
                        node: None,
                    };
                }
                8 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x80..=0xBF => {
                            cursor += 1;
                            yystate = 6;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                9 => {
                    cursor = marker;
                    yystate = 7;
                    continue 'yyl;
                }
                10 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0xA0..=0xBF => {
                            cursor += 1;
                            yystate = 8;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                11 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x80..=0xBF => {
                            cursor += 1;
                            yystate = 8;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                12 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x80..=0x9F => {
                            cursor += 1;
                            yystate = 8;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                13 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x90..=0xBF => {
                            cursor += 1;
                            yystate = 11;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                14 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x80..=0xBF => {
                            cursor += 1;
                            yystate = 11;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                15 => {
                    yych = unsafe { *s.get_unchecked(cursor) };
                    match yych {
                        0x80..=0x8F => {
                            cursor += 1;
                            yystate = 11;
                            continue 'yyl;
                        }
                        _ => {
                            yystate = 9;
                            continue 'yyl;
                        }
                    }
                }
                _ => {
                    panic!("internal lexer error")
                }
            }
        }
    }
}
